{
  parserClass="com.github.firsttimeinforever.mermaid.lang.parser._MermaidParser"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
  psiClassPrefix="Mermaid"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.firsttimeinforever.mermaid.lang.psi"
  psiImplPackage="com.github.firsttimeinforever.mermaid.lang.psi.impl"
  elementTypeHolderClass="com.github.firsttimeinforever.mermaid.lang.parser.MermaidElements"
  elementTypeClass="com.github.firsttimeinforever.mermaid.lang.psi.MermaidElementType"
  tokenTypeClass="com.github.firsttimeinforever.mermaid.lang.lexer.MermaidToken"
  parserImports=[
    'static com.github.firsttimeinforever.mermaid.lang.lexer.MermaidTokens.*'
    'static com.github.firsttimeinforever.mermaid.lang.lexer.MermaidTokens.Pie.*'
  ]
  generateTokens=false
}

file ::= start
private start ::= EOL start | comment start | directive start | diagram

private diagram ::= pieHeader pieLines

pieHeader ::= PIE [showDataRec]
private showDataRec ::= EOL showDataRec | SHOW_DATA


pieLines ::= pieDocument
upper pieDocument ::= pieLine [pieDocument]
pieLine ::= pieStatement [EOL] | EOL
private pieStatement ::= string COLON VALUE
	| TITLE TITLE_VALUE
	| directive
	| comment

comment ::= LINE_COMMENT [COMMENT_TEXT]

directive ::= OPEN_DIRECTIVE directiveContent CLOSE_DIRECTIVE
private directiveContent ::= property COMMA directiveContent | property
property ::= directiveKey COLON directiveValue
directiveKey ::= string | DIRECTIVE_TEXT
directiveValue ::= string | DIRECTIVE_TEXT | object
object ::= OPEN_CURLY directiveContent CLOSE_CURLY

string ::= DOUBLE_QUOTE STRING_VALUE DOUBLE_QUOTE
