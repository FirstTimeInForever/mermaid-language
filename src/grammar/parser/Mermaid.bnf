{
  parserClass="com.github.firsttimeinforever.mermaid.lang.parser._MermaidParser"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
  psiClassPrefix="Mermaid"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.firsttimeinforever.mermaid.lang.psi"
  psiImplPackage="com.github.firsttimeinforever.mermaid.lang.psi.impl"
  elementTypeHolderClass="com.github.firsttimeinforever.mermaid.lang.parser.MermaidElements"
  elementTypeClass="com.github.firsttimeinforever.mermaid.lang.psi.MermaidElementType"
  tokenTypeClass="com.github.firsttimeinforever.mermaid.lang.lexer.MermaidToken"
  parserImports=[
    'static com.github.firsttimeinforever.mermaid.lang.lexer.MermaidTokens.*'
    'static com.github.firsttimeinforever.mermaid.lang.lexer.MermaidTokens.Pie.*'
  ]
  generateTokens=false
}

file ::= start
private start ::= EOL start | comment start | pieHeader document
pieHeader ::= PIE showDataRec | PIE
private showDataRec ::= EOL showDataRec | SHOW_DATA


document ::= line document | line
line ::= statement | EOL
statement ::= string COLON VALUE | TITLE TITLE_VALUE | comment
comment ::= LINE_COMMENT COMMENT_TEXT | LINE_COMMENT

//directive ::= OPEN_DIRECTIVE directiveContent CLOSE_DIRECTIVE
//private directiveContent ::= property COMMA directiveContent | property
//property ::= directiveKey COLON directiveValue
//directiveKey ::= string | DIRECTIVE_TEXT
//directiveValue ::= string | DIRECTIVE_TEXT | object
//object ::= OPEN_CURLY directiveContent CLOSE_CURLY

string ::= DOUBLE_QUOTE STRING_VALUE DOUBLE_QUOTE

//start
//  : eol start
//  | directive start
//	| PIE document
//  | PIE showData document {yy.setShowData(true);}
//	;
//
//document
//	: /* empty */
//	| document line
//	;
//
//line
//	: statement eol { $$ = $1 }
//	;
//
//statement
//  :
//	| txt value          { yy.addSection($1,yy.cleanupValue($2)); }
//	| title title_value  { $$=$2.trim();yy.setTitle($$); }
//	| directive
//	;
//
//directive
//  : openDirective typeDirective closeDirective
//  | openDirective typeDirective ':' argDirective closeDirective
//  ;
//
//eol
//  : NEWLINE
//  | ';'
//  | EOF
//  ;
//
//openDirective
//  : open_directive { yy.parseDirective('%%{', 'open_directive'); }
//  ;
//
//typeDirective
//  : type_directive { yy.parseDirective($1, 'type_directive'); }
//  ;
//
//argDirective
//  : arg_directive { $1 = $1.trim().replace(/'/g, '"'); yy.parseDirective($1, 'arg_directive'); }
//  ;
//
//closeDirective
//  : close_directive { yy.parseDirective('}%%', 'close_directive', 'pie'); }
//  ;